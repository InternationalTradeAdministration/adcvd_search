{"version":3,"sources":["API/config.js","API/TradeRepository.js","Components/ResultsList.jsx","Components/FiltersContainer.jsx","store/actions.js","Components/ResultsContainer.jsx","Components/FormContainer.jsx","Components/App.js","store/reducer.js","serviceWorker.js","index.js"],"names":["module","exports","url","apiKey","TradeRepository","this","searchQuery","params","activePage","fetch","then","response","json","catch","error","console","log","ResultsList","formattedQuery","props","location","search","replace","substring","className","total","results","map","item","key","id","href","country","product","case_number","Component","withRouter","require","FiltersContainer","state","categories","Object","entries","aggregations","forEach","push","FilterCategories","cat","i","filterTitles","sub","type","name","value","onChange","onToggleFilter","onClick","onClearAll","connect","dispatch","event","target","case_numbers","commodities","countries","hts_numbers","products","ResultsContainer","offset","loading","setState","config","tradeRepository","storedFilters","length","_getData","tradeResponse","fetchData","prevProps","prevState","document","querySelectorAll","el","open","pageNumber","showLoadingAnimation","ready","rows","style","width","margin","color","totalItemsCount","itemsCountPerPage","firstPageText","prevPageText","nextPageText","lastPageText","handlePageChange","FormContainer","handleSubmit","preventDefault","submitted","history","handleChangeInput","bind","onSubmit","aria-label","placeholder","query","path","render","initialState","reducer","action","includes","filter","checked","Boolean","window","hostname","match","store","createStore","renderAdcvdSearch","divID","ReactDOM","hashType","getElementById","Explorer","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.c4962975.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = {\n    // url: \"https://api.trade.gov/v1/adcvd_orders/search\",\n    // apiKey: \"hSLqwdFz1U25N3ZrWpLB-Ld4\",\n    url: \"https://api.govwizely.com/v1/adcvd_orders/search\",\n    apiKey: \"Z48wSr3E3nNN4itDUvE4Clje\",\n  }\n} else if (process.env.NODE_ENV === 'staging') {\n  module.exports = {\n    url: \"https://api.govwizely.com/v1/adcvd_orders/search\",\n    apiKey: \"Z48wSr3E3nNN4itDUvE4Clje\",\n  }\n} else {\n  module.exports = {\n    url: \"https://api.govwizely.com/v1/adcvd_orders/search\",\n    apiKey: \"Z48wSr3E3nNN4itDUvE4Clje\",  \n  }\n}","export class TradeRepository {\n  constructor(url, apiKey) {\n    this.url = url;\n    this.apiKey = apiKey;\n  }\n\n  async _getData(searchQuery, params=\"\", activePage=1) {\n    return fetch(`${this.url}?q=${searchQuery}&api_key=${this.apiKey}&${params}&size=10&offset=${(activePage-1)*10}`)\n      .then(response => response.json())\n      .catch(error => console.log(error))\n  }\n\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './styles/ResultsList.scss';\n\nclass ResultsList extends Component {\n\n  render() {\n    const spaceRegex = /(%20)+/g;\n    const formattedQuery = this.props.location.search.replace(spaceRegex, ' ').substring(1);\n\n    return(\n      <div className=\"ResultsList\">\n        <p className=\"searchMessage\"><strong className=\"searchMessageKeyword\">{this.props.total}</strong> results from the ADCVD Cases were found for <strong className=\"searchMessageKeyword\">{formattedQuery}.</strong></p>\n\n        { this.props.results.map(item => {\n          return (\n            <div className=\"anItem\" key={item.id}>\n              <a href={item.url}>{item.country}, {item.product}</a>\n              <p>{item.product}</p>\n              <p>{item.case_number}</p>\n            </div>\n          )\n        }) }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ResultsList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './styles/FiltersContainer.scss';\nimport { TOGGLE_FILTER, CLEAR_FILTERS } from '../store/actions';\nrequire('details-polyfill')\n\nclass FiltersContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    const categories = []\n    Object.entries(this.props.aggregations).forEach(\n      ([key, value]) => categories.push(key)\n    )\n\n    const FilterCategories = (\n      categories.map((cat, i) => {\n        return (\n          <details className=\"FilterCategory\" key={i}>\n            <summary key={i}>{filterTitles[cat]}</summary>\n            {this.props.aggregations[cat].map((sub, i) => {\n              return (\n                <label key={i}>\n                  <input type=\"checkbox\" name={cat} value={sub[\"key\"]} key={i} onChange={this.props.onToggleFilter}/> {sub[\"key\"]}: {sub[\"doc_count\"]}\n                </label>\n              )\n            })}\n          </details>\n        )\n      })\n    )\n\n    return(\n      <div className=\"FiltersContainer\">\n        { (this.props.aggregations !== {}) ? (\n          <>\n            <div><h2>Filter Results</h2><button onClick={this.props.onClearAll}>[Clear All]</button></div>\n            {FilterCategories}\n          </>\n        ) : null }\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleFilter: (event) => dispatch({type: TOGGLE_FILTER, name: event.target.name, value: event.target.value}),\n    onClearAll: () => dispatch({ type: CLEAR_FILTERS})\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(FiltersContainer);\n\nconst filterTitles = {\n  case_numbers: \"Case Numbers\",\n  commodities: \"Commodities\",\n  countries: \"Countries\",\n  hts_numbers: \"HTS Numbers\",\n  products: \"Products\",\n}\n","export const TOGGLE_FILTER = 'TOGGLE_FILTER';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { CLEAR_FILTERS } from '../store/actions';\nimport { TradeRepository } from '../API/TradeRepository';\nimport config from '../API/config';\nimport Pagination from 'react-js-pagination';\nimport ReactPlaceholder from 'react-placeholder';\nimport \"react-placeholder/lib/reactPlaceholder.css\";\nimport ResultsList from './ResultsList';\nimport FiltersContainer from './FiltersContainer';\nimport './styles/ResultsContainer.scss';\n\nclass ResultsContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      total: 0,\n      offset: 0,\n      activePage: 1,\n      results: [],\n      aggregations: {},\n      loading: false,\n    }\n  };\n\n  async fetchData() {\n    await this.setState({ loading: true })\n    const tradeRepository = await new TradeRepository(config.url, config.apiKey)\n    \n    let params = '';\n    if (this.props.storedFilters) {\n      Object.entries(this.props.storedFilters).forEach(\n        ([key, value]) => {\n          if (this.props.storedFilters[key].length > 0) {\n            params += `&${key}=${this.props.storedFilters[key].map(item => item)}`\n          }\n        }\n      )  \n    }\n\n    const tradeResponse = await tradeRepository._getData(this.props.location.search.substring(1), params, this.state.activePage)\n    await this.setState({\n      total: tradeResponse.total,\n      offset: tradeResponse.offset,\n      results: tradeResponse.results,\n      aggregations: tradeResponse.aggregations,\n      loading: false,\n    })\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.location.search !== prevProps.location.search) {\n      this.props.onClearAll(); // Clear the filters if submitted a new query\n      document.querySelectorAll('details').forEach( el => el.open = false ); // And collapse all the filter categories\n      this.fetchData();\n    }\n    if (this.props.storedFilters !== prevProps.storedFilters) {\n      this.fetchData();\n    }\n  }\n\n  handlePageChange(pageNumber) {\n    this.setState({ activePage: pageNumber }, () => this.fetchData());\n  };\n\n  render() {\n    return (\n      <div className=\"ResultsContainer\">\n\n        <FiltersContainer aggregations={this.state.aggregations}/>\n\n        <ReactPlaceholder \n          type='text' \n          showLoadingAnimation={true} \n          ready={!this.state.loading} \n          rows={6} style={{ width: 250, margin: '2em 0 0.5em 1em' }} color='#E0E0E0'\n        >\n\n          <ResultsList total={this.state.total} results={this.state.results}/>\n\n        </ReactPlaceholder>\n\n        { (this.state.total > 0) ? (\n          <Pagination \n            activePage={this.state.activePage}\n            totalItemsCount={this.state.total}\n            itemsCountPerPage={10}\n            firstPageText=\"<<\"\n            prevPageText=\"<\"\n            nextPageText=\">\"\n            lastPageText=\">>\"\n            onChange={(pageNumber) => this.handlePageChange(pageNumber)}\n          />\n        ) : null }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedFilters: state,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClearAll: () => dispatch({ type: CLEAR_FILTERS})\n  }\n}\n\nexport default ResultsContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(ResultsContainer));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ResultsContainer from './ResultsContainer';\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchQuery: '',\n      submitted: false,\n    }\n    this.handleChangeInput = this.handleChangeInput.bind(this);\n  }\n\n  handleChangeInput(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({ submitted: true });\n    this.props.history.push({ search: `${this.state.searchQuery}`})\n  }\n\n  render() {\n    return (\n      <div>\n        { !this.state.submitted ? (\n          <p>Through the enforcement of U.S. Antidumping Duty (AD) and Countervailing Duty (CVD) trade laws, the International Trade Administration is able to safeguard and enhance the competitive strength of U.S. industries against unfair trade and ensure compliance with trade agreements negotiated on behalf of the U.S. This site serves as a public notice of active case proceedings, including such information as upcoming announcement dates, harmonized tariff schedule numbers, and scope of the order.</p>\n        ) : null }\n        <p>Search Instructions: To get started, enter in either a country, product, Case Number, HTS Number, or Commodity.</p>\n        <form onSubmit={(event) => this.handleSubmit(event)}>\n          <input\n            type=\"text\" \n            name=\"searchQuery\"\n            aria-label=\"Enter search query\"\n            placeholder=\"Enter search query\"\n            value={this.state.searchQuery}\n            onChange={(event) => this.handleChangeInput(event)}\n          />\n          <button type=\"submit\" aria-label=\"submit\">Search</button>\n        </form>\n        { this.state.submitted ? (\n          <ResultsContainer query={this.state.searchQuery}/>\n        ) : null }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(FormContainer);","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport FormContainer from './FormContainer';\nimport './styles/App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path={`/`} render={(props) => \n        <FormContainer {...props} />} />\n      <Route path={`/?:query`} render={(props) =>\n        <FormContainer {...props} location={props.location} />} />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import * as actionTypes from './actions';\n\nconst initialState = {\n  case_numbers: [],\n  commodities: [],\n  countries: [],\n  hts_numbers: [],\n  products: [],  \n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TOGGLE_FILTER:\n      if (state[action.name].includes(action.value)) {\n        return {\n          ...state,\n          [action.name]: state[action.name].filter(el => el !== action.value)\n        }\n      } else {\n        return {\n          ...state,\n          [action.name]: [...state[action.name], action.value],\n        }\n      }\n\n    case actionTypes.CLEAR_FILTERS:\n      document.querySelectorAll('input[type=checkbox]').forEach( el => el.checked = false );\n      return {\n        ...initialState\n      }\n    default:\n      return state;    \n  }\n};\n\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11'; // this polyfill needs to be first for IE11 support\nimport 'react-app-polyfill/stable';\nimport \"core-js/stable\"; // necessary for IE11 support for Router\nimport \"regenerator-runtime/runtime\"; // necessary for IE11 support for Router\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './Components/App';\nimport reducer from './store/reducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer);\n\nfunction renderAdcvdSearch(divID) {\n  ReactDOM.render(\n    <Provider store={store}>\n      <HashRouter hashType=\"noslash\">\n        <App />\n      </HashRouter>\n    </Provider>,\n    document.getElementById(divID)\n  );\n}\n\nexport default renderAdcvdSearch;\nwindow.Explorer = {\n  renderAdcvdSearch: renderAdcvdSearch,\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}